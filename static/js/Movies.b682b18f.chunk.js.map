{"version":3,"file":"static/js/Movies.b682b18f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieItem_movieItem__+5IiU\",\"link\":\"MovieItem_link__mit6j\",\"movieInfo\":\"MovieItem_movieInfo__B75px\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport styles from './MovieItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ title, id, poster, release, rating }) => {\n  const location = useLocation();\n  const imgUrl = poster\n    ? ` https://image.tmdb.org/t/p/w300${poster}`\n    : 'https://www.freeiconspng.com/uploads/no-image-icon-6.png';\n\n  const releaseYear = release.slice(0, 4);\n  const movieRating = rating.toFixed(1);\n\n  return (\n    <li className={styles.movieItem}>\n      <NavLink\n        className={styles.link}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        <img src={imgUrl} alt={title} />\n        <div className={styles.movieInfo}>\n          <h2>{title}</h2>\n          <p>{releaseYear}</p>\n          <p>{movieRating}</p>\n        </div>\n      </NavLink>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  release: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\"};","import { MovieItem } from '../MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  // console.log('movies', movies);\n  return (\n    <ul className={styles.movieList}>\n      {movies.map(({ id, title, poster_path, release_date, vote_average }) => {\n        // console.log(poster_path);\n        // console.log(release_date);\n        // console.log(vote_average);\n\n        return (\n          <MovieItem\n            key={id}\n            id={id}\n            title={title}\n            poster={poster_path}\n            release={release_date}\n            rating={vote_average}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"formBtn\":\"Movies_formBtn__ia-Q2\"};","import { MovieList } from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\nimport * as movieAPI from 'services/movieAPI';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport styles from './Movies.module.css';\nimport queryStr from 'query-string';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log('searchParams', searchParams);\n  const { search } = useLocation();\n  const { query } = queryStr.parse(search) ?? ''; // через библиотеку query-string\n  // const query = searchParams.get('query') ?? ''; // через useSearchParams\n  const [inputhQuery, setInputhQuery] = useState(query);\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    movieAPI\n      .fetchSearchingFilms(query)\n      .then(data => setSearchMovies(data))\n      .catch(console.log);\n  }, [query]);\n\n  // const getFormData = data => {\n  //   setQuery(data);\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputhQuery === '') {\n      Notify.warning(\"You didn't enter anything to search\");\n      return;\n    }\n    setSearchParams({ query: inputhQuery });\n  };\n\n  const handleChange = e => {\n    setInputhQuery(e.target.value.toLowerCase().trim());\n  };\n\n  return (\n    <div className={styles.container}>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          onChange={handleChange}\n          placeholder=\"Enter movie name\"\n          className={styles.input}\n          value={inputhQuery}\n        />\n\n        <button type=\"submit\" className={styles.formBtn}>\n          Search\n        </button>\n      </form>\n      {/* <SearchForm onSubmit={getFormData} /> */}\n      {searchMovies.length > 0 && query && <MovieList movies={searchMovies} />}\n      {inputhQuery !== '' && searchMovies.length === 0 && query && (\n        <p>\n          Sorry, there are no movies matching your search query. Please try\n          again.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5bad2d5f9d55e6c30d24d3c221da8172';\n\nexport async function fetchTrandingFilms() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchingFilms(searchQuery) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US?`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data;\n}\n\nexport async function getFilmReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data.results;\n}\n\nexport async function getFilmCast(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data.cast;\n}\n"],"names":["MovieItem","title","id","poster","release","rating","location","useLocation","imgUrl","releaseYear","slice","movieRating","toFixed","className","styles","to","state","from","src","alt","MovieList","movies","map","poster_path","release_date","vote_average","useSearchParams","searchParams","setSearchParams","console","log","search","query","queryStr","useState","inputhQuery","setInputhQuery","searchMovies","setSearchMovies","useEffect","movieAPI","then","data","catch","onSubmit","e","preventDefault","Notify","type","name","onChange","target","value","toLowerCase","trim","placeholder","length","axios","API_KEY","fetchTrandingFilms","response","results","fetchSearchingFilms","searchQuery","fetchMovieDetails","getFilmReviews","getFilmCast","cast"],"sourceRoot":""}