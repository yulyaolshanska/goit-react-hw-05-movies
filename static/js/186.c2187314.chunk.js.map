{"version":3,"file":"static/js/186.c2187314.chunk.js","mappings":"iMAmCA,UA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACkBN,GACfO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,MACxBC,MAAMC,QAAQC,OAChB,CAACX,KAGF,8BACGG,EAAQS,OAAS,GAChB,wBACGT,EAAQU,MAAM,EAAG,IAAIC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACxC,OACE,2BACE,mCAAWA,MACX,uBAAID,MAFGD,SAQf,wE,0MC3BRG,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASb,KAAKc,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACkBN,IAAAA,IAAA,gCACIC,EADJ,kBACqBK,EADrB,4BADlB,cACCH,EADD,yBAIEA,EAASb,KAAKc,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCV,GAAjC,uFACkBG,IAAAA,IAAA,iBACXH,EADW,oBACGI,EADH,qBADlB,cACCE,EADD,yBAIEA,EAASb,MAJX,kEAOA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BX,GAA9B,uFACkBG,IAAAA,IAAA,iBACXH,EADW,4BACWI,EADX,qBADlB,cACCE,EADD,yBAIEA,EAASb,KAAKc,SAJhB,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BZ,GAA3B,uFACkBG,IAAAA,IAAA,iBACXH,EADW,4BACWI,EADX,qBADlB,cACCE,EADD,yBAIEA,EAASb,KAAKoB,MAJhB","sources":["components/Reviews/Reviews.jsx","services/movieAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as movieAPI from 'services/movieAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    movieAPI\n      .getFilmReviews(movieId)\n      .then(data => setReviews(data))\n      .catch(console.log);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.slice(0, 10).map(({ id, content, author }) => {\n            return (\n              <li key={id}>\n                <p>Author:{author}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5bad2d5f9d55e6c30d24d3c221da8172';\n\nexport async function fetchTrandingFilms() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchingFilms(searchQuery) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US?`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data;\n}\n\nexport async function getFilmReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data.results;\n}\n\nexport async function getFilmCast(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data.cast;\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","movieAPI","then","data","catch","console","log","length","slice","map","id","content","author","axios","API_KEY","fetchTrandingFilms","response","results","fetchSearchingFilms","searchQuery","fetchMovieDetails","getFilmReviews","getFilmCast","cast"],"sourceRoot":""}