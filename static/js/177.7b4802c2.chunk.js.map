{"version":3,"file":"static/js/177.7b4802c2.chunk.js","mappings":"mNAEaA,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC7B,OACE,mBAAQC,KAAK,SAAb,UACE,SAAC,KAAD,CAAMC,GAAIF,EAAV,wB,SCLOG,EAAY,SAAC,GAOnB,IANLC,EAMI,EANJA,OAEAC,EAII,EAJJA,MACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,OAQA,OACE,+BACE,4BACE,gBAAKC,IAAKL,EAAQM,IAAKJ,EAAOK,MAAO,WAErC,4BACE,wBAAKL,KACL,uCAAeD,EAAf,QACA,sCACA,uBAAIE,KACJ,mCACCC,IAAU,yBAAIA,EAAOI,KAAI,qBAAGC,QAAiBC,KAAK,MAAxC,gB,8BC6BrB,EA/CqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFlB,EAAY,qBADDoB,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAGvCC,EAASP,EAAMQ,YAAN,0CACwBR,EAAMQ,aACzC,2DAEEC,EAAcC,KAAKC,MAA2B,GAArBX,EAAMY,cAcrC,OAXAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACqBZ,GAClBa,MAAK,SAAAC,GAEJf,EAASe,MAEVC,MAAMC,QAAQC,SAChB,CAACjB,KAIF,iCACE,SAACnB,EAAD,CAAcC,aAAcA,KAC5B,SAACG,EAAD,CACEC,OAAQmB,EAERjB,MAAOU,EAAMV,MACbC,SAAUS,EAAMT,SAChBF,MAAOoB,EACPjB,OAAQQ,EAAMR,UAEhB,qDACA,SAAC,KAAD,CAASN,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,sBACA,SAAC,EAAAkC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,W,0MC9CRC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASV,KAAKW,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACkBN,IAAAA,IAAA,gCACIC,EADJ,kBACqBK,EADrB,4BADlB,cACCH,EADD,yBAIEA,EAASV,KAAKW,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBR,IAAAA,IAAA,iBACXQ,EADW,oBACGP,EADH,qBADlB,cACCE,EADD,yBAIEA,EAASV,MAJX,kEAOA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACkBR,IAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,qBADlB,cACCE,EADD,yBAIEA,EAASV,KAAKW,SAJhB,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA2BF,GAA3B,uFACkBR,IAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,qBADlB,cACCE,EADD,yBAIEA,EAASV,KAAKkB,MAJhB","sources":["components/GoBackBtn/GoBackBtn.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/movieAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const GoBackButton = ({ backLinkHref }) => {\n  return (\n    <button type=\"button\">\n      <Link to={backLinkHref}>Go back</Link>\n    </button>\n  );\n};\n","export const MovieInfo = ({\n  poster,\n\n  score,\n  title,\n  overview,\n  genres,\n}) => {\n  // console.log('movies', movies);\n  // const { title, overview, genres } = movies;\n\n  // console.log('genres', genres);\n\n  // const joinGenres = genres.map(({ name }) => name);\n  return (\n    <>\n      <div>\n        <img src={poster} alt={title} width={'300px'}></img>\n\n        <div>\n          <h1>{title}</h1>\n          <p>User Score:{score}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          {genres && <p>{genres.map(({ name }) => name).join(', ')}.</p>}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { GoBackButton } from 'components/GoBackBtn/GoBackBtn';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useState, useEffect, Suspense } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport * as movieAPI from 'services/movieAPI';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  // const location = useLocation();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  // console.log('movieId', movieId);\n\n  const imgUrl = movie.poster_path\n    ? ` https://image.tmdb.org/t/p/w500${movie.poster_path}`\n    : 'https://www.freeiconspng.com/uploads/no-image-icon-6.png';\n\n  const voteAverage = Math.round(movie.vote_average * 10);\n  // const joinGenres = movie.genres.map(genre => genre.name);\n\n  useEffect(() => {\n    movieAPI\n      .fetchMovieDetails(movieId)\n      .then(data => {\n        // console.log('data', data);\n        setMovie(data);\n      })\n      .catch(console.log());\n  }, [movieId]);\n\n  // console.log(movie);\n  return (\n    <>\n      <GoBackButton backLinkHref={backLinkHref} />\n      <MovieInfo\n        poster={imgUrl}\n        // movies={movie}\n        title={movie.title}\n        overview={movie.overview}\n        score={voteAverage}\n        genres={movie.genres}\n      />\n      <h4>Addititonal information</h4>\n      <NavLink to=\"cast\">Cast</NavLink>\n      <NavLink to=\"reviews\">Reviews</NavLink>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5bad2d5f9d55e6c30d24d3c221da8172';\n\nexport async function fetchTrandingFilms() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchingFilms(searchQuery) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US?`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data;\n}\n\nexport async function getFilmReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data.results;\n}\n\nexport async function getFilmCast(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data.cast;\n}\n"],"names":["GoBackButton","backLinkHref","type","to","MovieInfo","poster","score","title","overview","genres","src","alt","width","map","name","join","useState","movie","setMovie","movieId","useParams","useLocation","state","from","imgUrl","poster_path","voteAverage","Math","round","vote_average","useEffect","movieAPI","then","data","catch","console","log","Suspense","fallback","Loader","axios","API_KEY","fetchTrandingFilms","response","results","fetchSearchingFilms","searchQuery","fetchMovieDetails","id","getFilmReviews","getFilmCast","cast"],"sourceRoot":""}