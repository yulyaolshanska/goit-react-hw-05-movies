{"version":3,"file":"static/js/Home.7b268f80.chunk.js","mappings":"6LACA,EAA4B,6BAA5B,EAAgE,wBAAhE,EAAoG,6B,SCGvFA,EAAY,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAChDC,GAAWC,EAAAA,EAAAA,MACXC,EAASL,EAAM,0CACkBA,GACnC,2DAEEM,EAAcL,EAAQM,MAAM,EAAG,GAC/BC,EAAcN,EAAOO,QAAQ,GAEnC,OACE,eAAIC,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAWC,EACXC,GAAE,kBAAab,GACfc,MAAO,CAAEC,KAAMX,GAHjB,WAKE,gBAAKY,IAAKV,EAAQW,IAAKlB,KACvB,iBAAKY,UAAWC,EAAhB,WACE,wBAAKb,KACL,uBAAIQ,KACJ,uBAAIE,aCvBd,EAA4B,6BCGfS,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE1B,OACE,eAAIR,UAAWC,EAAf,SACGO,EAAOC,KAAI,YAA6D,IAA1DpB,EAAyD,EAAzDA,GAAID,EAAqD,EAArDA,MAAOsB,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAKnD,OACE,SAACzB,EAAD,CAEEE,GAAIA,EACJD,MAAOA,EACPE,OAAQoB,EACRnB,QAASoB,EACTnB,OAAQoB,GALHvB,U,4GCdjB,EAA4B,wB,SCsB5B,EAlBa,WACX,OAA4BwB,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAEGC,KAAKH,GACLI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,KAGD,iBAAKnB,UAAWC,EAAhB,WACE,4CACA,SAACM,EAAA,EAAD,CAAWC,OAAQA,S,0MChBzBc,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACkBP,IAAAA,IAAA,gCACIC,EADJ,kBACqBM,EADrB,4BADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCzC,GAAjC,uFACkBiC,IAAAA,IAAA,iBACXjC,EADW,oBACGkC,EADH,qBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1C,GAA9B,uFACkBiC,IAAAA,IAAA,iBACXjC,EADW,4BACWkC,EADX,qBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2B3C,GAA3B,uFACkBiC,IAAAA,IAAA,iBACXjC,EADW,4BACWkC,EADX,qBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKO,MAJhB","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/movieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"MovieItem_movieItem__+5IiU\",\"link\":\"MovieItem_link__mit6j\",\"movieInfo\":\"MovieItem_movieInfo__B75px\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport styles from './MovieItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ title, id, poster, release, rating }) => {\n  const location = useLocation();\n  const imgUrl = poster\n    ? ` https://image.tmdb.org/t/p/w300${poster}`\n    : 'https://www.freeiconspng.com/uploads/no-image-icon-6.png';\n\n  const releaseYear = release.slice(0, 4);\n  const movieRating = rating.toFixed(1);\n\n  return (\n    <li className={styles.movieItem}>\n      <NavLink\n        className={styles.link}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        <img src={imgUrl} alt={title} />\n        <div className={styles.movieInfo}>\n          <h2>{title}</h2>\n          <p>{releaseYear}</p>\n          <p>{movieRating}</p>\n        </div>\n      </NavLink>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  release: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\"};","import { MovieItem } from '../MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  // console.log('movies', movies);\n  return (\n    <ul className={styles.movieList}>\n      {movies.map(({ id, title, poster_path, release_date, vote_average }) => {\n        // console.log(poster_path);\n        // console.log(release_date);\n        // console.log(vote_average);\n\n        return (\n          <MovieItem\n            key={id}\n            id={id}\n            title={title}\n            poster={poster_path}\n            release={release_date}\n            rating={vote_average}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__w+u63\"};","import { MovieList } from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\nimport * as movieAPI from 'services/movieAPI';\nimport styles from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    movieAPI\n      .fetchTrandingFilms()\n      .then(setMovies)\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <h2>Trending today</h2>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5bad2d5f9d55e6c30d24d3c221da8172';\n\nexport async function fetchTrandingFilms() {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport async function fetchSearchingFilms(searchQuery) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&language=en-US?`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data;\n}\n\nexport async function getFilmReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data.results;\n}\n\nexport async function getFilmCast(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US?`\n  );\n  return response.data.cast;\n}\n"],"names":["MovieItem","title","id","poster","release","rating","location","useLocation","imgUrl","releaseYear","slice","movieRating","toFixed","className","styles","to","state","from","src","alt","MovieList","movies","map","poster_path","release_date","vote_average","useState","setMovies","useEffect","movieAPI","then","catch","err","console","log","axios","API_KEY","fetchTrandingFilms","response","data","results","fetchSearchingFilms","searchQuery","fetchMovieDetails","getFilmReviews","getFilmCast","cast"],"sourceRoot":""}